import com.nitgen.SDK.BSP.NBioBSPJNI;

public class NBioAPI_ANSIMatching extends javax.swing.JDialog {

    /** Creates new form NBioAPI_ANSIMatching */
    public NBioAPI_ANSIMatching(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent e) {
                Closing();
                System.exit(0);
            }
        });

        bsp = new NBioBSPJNI();

        if (CheckError())
            return ;

        exportEngine = bsp.new Export();

        if (CheckError())
            return ;

        setTitle("NBioAPI_ANSIMatching BSP version: " + bsp.GetVersion());
    }

    public void dispose()
    {
        if (hANSIFIR1 != null)  {
            hANSIFIR1.dispose();
            hANSIFIR1 = null;
        }

        if (hANSIFIR2 != null)  {
            hANSIFIR2.dispose();
            hANSIFIR2 = null;
        }

        if (bsp != null) {
            bsp.dispose();
            bsp = null;
        }
    }

    public void Closing()
    {
        dispose();
    }

    private Boolean CheckError()
    {
        if (bsp.IsErrorOccured())  {
            javax.swing.JOptionPane.showMessageDialog(null, "NBioBSP Error Occured [" + bsp.GetErrorCode() + "]");
            return true;
        }

        return false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnANSIData1 = new javax.swing.JButton();
        btnANSIData2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnMatch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ansi Data Load"));

        btnANSIData1.setText("ANSI Data Load [1]");
        btnANSIData1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnANSIData1ActionPerformed(evt);
            }
        });

        btnANSIData2.setText("ANSI Data Load [2]");
        btnANSIData2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnANSIData2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnANSIData1)
                .add(18, 18, 18)
                .add(btnANSIData2)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnANSIData1)
                    .add(btnANSIData2))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Matching Test"));

        btnMatch.setText("ANSI Data Match");
        btnMatch.setEnabled(false);
        btnMatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatchActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnMatch, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnMatch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnANSIData1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnANSIData1ActionPerformed
        javax.swing.JFileChooser fs = new javax.swing.JFileChooser();

        fs.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        fs.setFileFilter(new javax.swing.filechooser.FileFilter() {
            public boolean accept(java.io.File f) {
                return f.getName().toLowerCase().endsWith(".min") || f.isDirectory();
            }

            public String getDescription() {
                return "NITGEN minute data";
            }
        });

        fs.setMultiSelectionEnabled(false);
        fs.setDialogTitle("Load Templates");
        fs.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);

        if (fs.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION)  {
            byte[] loadData;
            int nLoadLen = 0;
            java.io.FileInputStream fis = null;

            loadData = new byte[1024];

            try  {
                fis = new java.io.FileInputStream(fs.getSelectedFile());

                nLoadLen = fis.read(loadData);
            }
            catch (Exception e)  {
                javax.swing.JOptionPane.showMessageDialog(null, "FIle IO Error!!");
                return ;
            }
            finally  {
                try  {
                    fis.close();
                }
                catch (java.io.IOException e)
                {
                    javax.swing.JOptionPane.showMessageDialog(null, "FIle IO Error!!");
                    return ;
                }
            }

            if (nLoadLen > 0)  {
                if (hANSIFIR1 != null)  {
                    hANSIFIR1.dispose();
                    hANSIFIR1 = null;
                }

                hANSIFIR1 = bsp.new FIR_HANDLE();

                exportEngine.ImportFIR(loadData, nLoadLen, NBioBSPJNI.EXPORT_MINCONV_TYPE.ANSI, hANSIFIR1);

                if (CheckError())
                    return ;

                javax.swing.JOptionPane.showMessageDialog(null, "Import ANSI data success");

                if (hANSIFIR2 != null)  {
                    btnMatch.setEnabled(true);
                }
            }
            else
                javax.swing.JOptionPane.showMessageDialog(null, "File load fail");
        }
    }//GEN-LAST:event_btnANSIData1ActionPerformed

    private void btnANSIData2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnANSIData2ActionPerformed
        javax.swing.JFileChooser fs = new javax.swing.JFileChooser();

        fs.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        fs.setFileFilter(new javax.swing.filechooser.FileFilter() {
            public boolean accept(java.io.File f) {
                return f.getName().toLowerCase().endsWith(".min") || f.isDirectory();
            }

            public String getDescription() {
                return "NITGEN minute data";
            }
        });

        fs.setMultiSelectionEnabled(false);
        fs.setDialogTitle("Load Templates");
        fs.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);

        if (fs.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION)  {
            byte[] loadData;
            int nLoadLen = 0;
            java.io.FileInputStream fis = null;

            loadData = new byte[1024];

            try  {
                fis = new java.io.FileInputStream(fs.getSelectedFile());

                nLoadLen = fis.read(loadData);
            }
            catch (Exception e)  {
                javax.swing.JOptionPane.showMessageDialog(null, "FIle IO Error!!");
                return ;
            }
            finally  {
                try  {
                    fis.close();
                }
                catch (java.io.IOException e)
                {
                    javax.swing.JOptionPane.showMessageDialog(null, "FIle IO Error!!");
                    return ;
                }
            }

            if (nLoadLen > 0)  {
                if (hANSIFIR2 != null)  {
                    hANSIFIR2.dispose();
                    hANSIFIR2 = null;
                }

                hANSIFIR2 = bsp.new FIR_HANDLE();

                exportEngine.ImportFIR(loadData, nLoadLen, NBioBSPJNI.EXPORT_MINCONV_TYPE.ANSI, hANSIFIR2);

                if (CheckError())
                    return ;

                javax.swing.JOptionPane.showMessageDialog(null, "Import ANSI data success");

                if (hANSIFIR1 != null)  {
                    btnMatch.setEnabled(true);
                }
            }
            else
                javax.swing.JOptionPane.showMessageDialog(null, "File load fail");
        }
    }//GEN-LAST:event_btnANSIData2ActionPerformed

    private void btnMatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatchActionPerformed
        NBioBSPJNI.INPUT_FIR inputFIR = bsp.new INPUT_FIR();
        NBioBSPJNI.INPUT_FIR inputFIR2 = bsp.new INPUT_FIR();
        Boolean bResult = new Boolean(false);

        inputFIR.SetFIRHandle(hANSIFIR1);
        inputFIR2.SetFIRHandle(hANSIFIR2);

        bsp.VerifyMatch(inputFIR2, inputFIR, bResult, null);

        if (CheckError())
            return ;

        if (bResult)
            javax.swing.JOptionPane.showMessageDialog(null, "Verify OK");
        else
            javax.swing.JOptionPane.showMessageDialog(null, "Verify Failed");
    }//GEN-LAST:event_btnMatchActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NBioAPI_ANSIMatching dialog = new NBioAPI_ANSIMatching(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
    }

    NBioBSPJNI                  bsp;
    NBioBSPJNI.FIR_HANDLE       hANSIFIR1;
    NBioBSPJNI.FIR_HANDLE       hANSIFIR2;
    NBioBSPJNI.Export           exportEngine;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnANSIData1;
    private javax.swing.JButton btnANSIData2;
    private javax.swing.JButton btnMatch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

}
